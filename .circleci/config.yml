version: 2.1

jobs:
  run_tests:
    docker:
      - image: python:3.14.0a1-alpine3.20
    steps:
      - checkout

      # ─── 1. Runtime: Chromium + JDK + Allure ─────────────────────
      - run:
          name: Setup environment
          command: |
            set -e
            apk update
            apk add --no-cache curl jq chromium chromium-chromedriver tzdata openjdk17-jre
            wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
            wget -q https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.34-r0/glibc-2.34-r0.apk
            apk add --no-cache glibc-2.34-r0.apk
            ALLURE_VER=2.27.0
            curl -Ls "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/${ALLURE_VER}/allure-commandline-${ALLURE_VER}.tgz" \
              | tar -xz -C /opt/
            ln -sf /opt/allure-${ALLURE_VER}/bin/allure /usr/bin/allure

      # ─── 2. Python deps ───────────────────────────────────────────
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt \
                        pytest-xdist[psutil] \
                        allure-pytest

      # ─── 3. Тесты + JUnit XML ────────────────────────────────────
      - run:
          name: Run tests
          command: |
            mkdir -p test-results                       # ← добавили
            STAGE=https://dev-crm.qa-playground.com \
            BROWSER=chrome \
            pytest -sv -n 10 \
                   --alluredir=allure-results \
                   --junitxml=test-results/junit.xml || true
            echo "Generated JUnit files:"
            find test-results -name '*.xml' || true

      # ─── 4. Загрузка результатов в Test Insights ─────────────────
      - store_test_results:                             # как в доке
          path: test-results

      # ─── 5. Allure history ───────────────────────────────────────
      - restore_cache:
          keys: [ "allure-history-{{ .Branch }}-" ]

      - run:
          name: Setup Allure env variables
          command: |
            mkdir -p allure-results
            echo "Branch=$CIRCLE_BRANCH" > allure-results/environment.properties
            echo "Commit=$CIRCLE_SHA1"  >> allure-results/environment.properties

      - run:
          name: Generate Allure report
          command: |
            allure generate allure-results --clean -o allure-report

      - save_cache:
          paths: [ allure-report/history ]
          key: allure-history-{{ .Branch }}-{{ epoch }}

      - store_artifacts:
          path: allure-report
          destination: allure-report

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - run_tests