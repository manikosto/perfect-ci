jobs:
  run_tests:
    docker:
      - image: python:3.14.0a1-alpine3.20  # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è —Å—Ä–µ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
    steps:
      - checkout  # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è CircleCI

      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
      - run:
          name: Setup environment
          command: |
            apk add curl jq  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ curl –∏ jq –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö JSON
            apk update  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
            apk add --no-cache chromium chromium-chromedriver tzdata  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Chromium –∏ –µ–≥–æ WebDriver
            wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –¥–ª—è glibc
            wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-2.30-r0.apk  # –ó–∞–≥—Ä—É–∑–∫–∞ glibc
            wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-bin-2.30-r0.apk  # –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ glibc
            apk add --no-cache curl openjdk11-jre  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Java Runtime Environment
            curl -o allure-2.13.8.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.8/allure-commandline-2.13.8.tgz  # –ó–∞–≥—Ä—É–∑–∫–∞ Allure
            tar -zxvf allure-2.13.8.tgz -C /opt/  # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ Allure
            ln -s /opt/allure-2.13.8/bin/allure /usr/bin/allure  # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è Allure
            rm allure-2.13.8.tgz  # –£–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ Allure –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏

      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python –∏–∑ —Ñ–∞–π–ª–∞ requirements.txt
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt

      # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
      - run:
          name: Run tests
          command: |
            STAGE=https://dev-crm.qa-playground.com BROWSER=chrome pytest -sv --alluredir=allure-results --junitxml=test-results/junit.xml || true

      # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫ –¥–ª—è Allure –∏—Å—Ç–æ—Ä–∏–∏
      - restore_cache:
          keys:
            - allure-history-{{ .Branch }}-

      # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ Allure –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–±–æ—Ä–∫–∏
      - run:
          name: Preparing Allure history   # ‚Üê –∏—Å–ø—Ä–∞–≤–∏–ª –æ–ø–µ—á–∞—Ç–∫—É
          command: |
            if [ -d "allure-report/history" ]; then
              mkdir -p allure-results/history
              cp -r allure-report/history allure-results/
            else
              echo "No history to restore"
            fi

      # –ü–æ–ª—É—á–µ–Ω–∏–µ ID Job –∏–∑ CircleCI —á–µ—Ä–µ–∑ API –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—Ç—á–µ—Ç–∞—Ö
      - run:
          name: Get CircleCI Job ID
          command: |
            curl -H "Circle-Token: ${CIRCLECI_API_TOKEN}" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/job" > jobs.json
            JOB_ID=$(cat jobs.json | jq -r '.items[] | select(.name=="run_tests").id')  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ Job ID –¥–ª—è —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏
            echo "export CIRCLE_JOB_ID=$JOB_ID" >> $BASH_ENV
            source $BASH_ENV

      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Allure –æ—Ç—á–µ—Ç–∞
      - run:
          name: Setup Allure env variables
          command: |
            echo "Branch=$CIRCLE_BRANCH" > allure-results/environment.properties
            echo "Commit=$CIRCLE_SHA1" >> allure-results/environment.properties
            echo "Browser=$BROWSER" >> allure-results/environment.properties
            echo "{\"name\": \"CircleCI\", \"type\": \"circleci\", \"url\": \"$CIRCLE_REPOSITORY_URL\", \"buildOrder\": $CIRCLE_BUILD_NUM, \"buildName\": \"$CIRCLE_BRANCH\", \"buildUrl\": \"$CIRCLE_BUILD_URL\", \"reportUrl\": \"URL –æ—Ç—á–µ—Ç–∞\", \"reportName\": \"–û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏\"}" > allure-results/executor.json

      # 7. –æ—Ç—á—ë—Ç
      - run:
          name: Generate Allure report
          command: |
            allure generate allure-results --clean -o allure-report

      # 8. –∫–µ—à –∏—Å—Ç–æ—Ä–∏–∏
      - save_cache:
          paths: [ allure-report/history ]
          key: allure-history-{{ .Branch }}-{{ epoch }}

      # 9. –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
      - store_artifacts:
          path: allure-report
          destination: allure-report

      # 10. üëâ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è Test Insights
      - store_test_results:
          path: test-results

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - run_tests